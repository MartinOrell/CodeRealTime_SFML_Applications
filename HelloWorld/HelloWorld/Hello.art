capsule Hello{

    [[rt::header_preface]]
    `
        #include "gui.h"
    `

    [[rt::decl]]
    `
        public:
            Hello(RTController*, RTActorRef*);
        private:
            int _fps;
            RTTimerId _updateTimerId;
            Gui _gui;
    `

    [[rt::impl]]
    `
        Hello::Hello(RTController* rtg_rts, RTActorRef* rtg_ref)
        : RTActor(rtg_rts, rtg_ref)
        , _fps(60){}
    `

    behavior port updateTimer : Timing;

    statemachine{
        initial->Running;
        state Running{
            entry
            `
                _updateTimerId = updateTimer.informEvery(RTTimespec(0,1000000000/_fps));
            `;
            update: on updateTimer.timeout
            `
                if(!_gui.update()){
                    updateTimer.cancelTimer(_updateTimerId);
                    context()->abort();
                }
            `;
        };
    };
};