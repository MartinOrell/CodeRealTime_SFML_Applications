let tc = TCF.define(TCF.CPP_TRANSFORM);
tc.topCapsule = 'Top'
tc.userLibraries = [
    "../../SFML/build/_deps/sfml-build/lib/libsfml-audio.a",
    "../../SFML/build/_deps/sfml-build/lib/libsfml-graphics.a",
    "../../SFML/build/_deps/sfml-build/lib/libsfml-main.a",
    "../../SFML/build/_deps/sfml-build/lib/libsfml-network.a",
    "../../SFML/build/_deps/sfml-build/lib/libsfml-system.a",
    "../../SFML/build/_deps/sfml-build/lib/libsfml-window.a"
];
tc.inclusionPaths = [
    "../../SFML/build/_deps/sfml-src/include"
]
tc.makeCommand = 'cp -R -Force ../../SFML/build/bin/*  .; make; cp -R -Force ../../res .'
tc.threads = [
    {
        name: 'MainThread',
        implClass: 'RTPeerController',
        priority: 'DEFAULT_MAIN_PRIORITY',
        logical: [
            'L1'
        ]
    },
    {
        name: 'TimerThread',
        implClass: 'RTTimerController',
        priority: 'DEFAULT_TIMER_PRIORITY'
    },
    {
        name: 'RacerThread1',
        implClass: 'RTPeerController',
        priority: 'DEFAULT_MAIN_PRIORITY',
        logical: [
            'L2'
        ]
    },
    {
        name: 'RacerThread2',
        implClass: 'RTPeerController',
        priority: 'DEFAULT_MAIN_PRIORITY',
        logical: [
            'L3'
        ]
    },
]